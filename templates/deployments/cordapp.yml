apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cordapp.name" . }}
  labels:
    app: {{ template "cordapp.name" . }}
    chart: {{ template "bank-operations.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.apps.cordapp.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cordapp.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "cordapp.name" . }}
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Always
      volumes:
        - name: {{ .Values.config.resourceName }}-pv
          persistentVolumeClaim:
            claimName: {{ .Values.config.resourceName }}-pvc
        - name: node-config-volume
          configMap:
            name: {{ .Values.config.resourceName }}-corda-configmap
        - name: network-root-truststore
          hostPath:
            path: "/home/naoufal/helm-chart-corda/files/network/"
            type: Directory
      initContainers:
        # - name: get-truststore
        #   image: byrnedo/alpine-curl:latest
        #   command: ["--retry", "10", "--retry-delay", "5", "--retry-connrefused", "http://{{ .Values.service.nms.name }}:{{ .Values.service.nms.externalPort }}/network-map/truststore", "-o", "/tmp/networkRootTrustStore.jks"]
        #   volumeMounts:
        #     - mountPath: "/tmp"
        #       name: network-root-truststore

        # - name: nms-registration
        #   image: {{ .Values.apps.cordapp.repository }}:{{ .Values.apps.cordapp.tag }}
        #   command: ["java", "-jar", "./bin/corda.jar", "--initial-registration", "--config-file", "./node.conf",
        #    "--network-root-truststore", "./networkRootTrustStore.jks", "--network-root-truststore-password", "trustpass"]
        #   volumeMounts:
        #     - mountPath: /etc/corda/node.conf
        #       name: node-config-volume
        #       subPath: node.conf
        #       readOnly: true
        #     - mountPath: /opt/corda/
        #       name: node-config-volume

      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.apps.cordapp.repository }}:{{ .Values.apps.cordapp.tag }}
          imagePullPolicy: {{ .Values.apps.pullPolicy }}
          #command: ["/bin/bash", "/opt/corda/bin/run-corda"]
          ports:
            - containerPort: {{ .Values.service.cordapp.internalPort }}
          env:
            # - name: NETWORK_TRUST_PASSWORD
            #   value: changeme
            - name: IDENTITY_MANAGER_ADDRESS
              value: "{{ .Values.corda.node.conf.identityManagerAddress }}"
            - name: NETMAP_ADDRESS
              value: "{{ .Values.corda.node.conf.networkmapAddress }}"
            - name: TRUSTSTORE_PASSWORD
              value: "{{ .Values.corda.node.conf.truststorePassword }}"

          volumeMounts:
            - mountPath: "/opt/corda/workspace"
              name: {{ .Values.config.resourceName }}-pv
            - mountPath: /opt/corda/workspace/ping.sh
              name: node-config-volume
              subPath: ping.sh
              readOnly: true
            - mountPath: /etc/corda/workspace/node.conf
              name: node-config-volume
              subPath: node.conf
              readOnly: true
            - mountPath: /opt/corda/workspace/networkRootTrustStore.jks
              name: node-config-volume
              subPath: networkRootTrustStore.jks
              readOnly: true
            - mountPath: /opt/corda/workspace/certificates/nodekeystore.jks
              name: node-config-volume
              subPath: nodekeystore.jks
              readOnly: true
            - mountPath: /opt/corda/workspace/certificates/sslkeystore.jks
              name: node-config-volume
              subPath: sslkeystore.jks
              readOnly: true
            - mountPath: /opt/corda/workspace/certificates/truststore.jks
              name: node-config-volume
              subPath: truststore.jks
              readOnly: true

          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
